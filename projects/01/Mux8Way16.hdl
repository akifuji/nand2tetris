// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    Mux4Way16(a=a,b=b,c=c,d=d,sel=sel[0..1],out=abcd);
    Mux4Way16(a=e,b=f,c=g,d=h,sel=sel[0..1],out=efgh);
    Mux16(a=abcd,b=efgh,sel=sel[2],out=out);

    /**
    Not(in=sel[0],out=notsel0);
    Not(in=sel[1],out=notsel1);
    Not(in=sel[2],out=notsel2);

    And(a=notsel0,b=notsel1,out=ta);
    And(a=ta,b=notsel2,out=wa);
    And(a=sel[0],b=notsel1,out=tb);
    And(a=tb,b=notsel2,out=wb);
    And(a=notsel0,b=sel[1],out=tc);
    And(a=tc,b=notsel2,out=wc);
    And(a=sel[0],b=sel[1],out=td);
    And(a=td,b=notsel2,out=wd);
    And(a=notsel0,b=notsel1,out=te);
    And(a=te,b=sel[2],out=we);
    And(a=sel[0],b=notsel1,out=tf);
    And(a=tf,b=sel[2],out=wf);
    And(a=notsel0,b=sel[1],out=tg);
    And(a=tg,b=sel[2],out=wg);
    And(a=sel[0],b=sel[1],out=th);
    And(a=th,b=sel[2],out=wh);

    And16and1(a=a,b=wa,out=outa);
    And16and1(a=b,b=wb,out=outb);
    And16and1(a=c,b=wc,out=outc);
    And16and1(a=d,b=wd,out=outd);
    And16and1(a=e,b=we,out=oute);
    And16and1(a=f,b=wf,out=outf);
    And16and1(a=g,b=wg,out=outg);
    And16and1(a=h,b=wh,out=outh);

    Or16(a=outa,b=outb,out=outab);
    Or16(a=outc,b=outd,out=outcd);
    Or16(a=oute,b=outf,out=outef);
    Or16(a=outg,b=outh,out=outgh);
    Or16(a=outab,b=outcd,out=outabcd);
    Or16(a=outef,b=outgh,out=outefgh);
    Or16(a=outabcd,b=outefgh,out=out);
    */
}
